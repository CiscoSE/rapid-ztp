#!/usr/bin/env bash
# Clean the project directory.
#
# Copyright (c) 2019 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.0 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.
#
# AUTHOR(s): Chris Lunsford <chrlunsf@cisco.com>


set -e
cd "$(dirname "$0")/../app"


# Process Script Arguments
for i in ${@}; do
    case ${i} in
        --deep)
        deep_clean=true
        ;;

        *)
        echo "Unknown argument: $i"
        exit 1
        ;;
    esac
done


echo "==> Cleaning the project directory"

echo "Removing Python build artifacts"
find . -name '*.pyc' -exec rm -f {} +
find . -name '*.pyo' -exec rm -f {} +
find . -name '*~' -exec rm -f {} +
find . -name '__pycache__' -exec rm -fr {} +
find . -name '*.egg-info' -exec rm -fr {} +
find . -name '*.egg' -exec rm -f {} +
rm -rf build/
rm -rf dist/
rm -rf .eggs/

echo "Removing test and coverage artifacts"
rm -rf .cache/
rm -f  .coverage
rm -rf .tox/
rm -rf htmlcov/

if [ -d "docs" ]; then
    echo "Cleaning the docs directories"
    rm -rf docs/_build/*
fi

echo "Cleaning app execution artifacts"
rm -f celerybeat.pid
rm -f celerybeat-schedule


if [ ${deep_clean} ]; then
    echo "==> Deep cleaning..."

    if [ -f "Pipfile" ] && [ -n "$(pipenv --version 2>/dev/null)" ]; then
        echo "Removing pipenv environment"
        pipenv --rm || true
    fi

    if [ -d ".venv" ]; then
        echo "Removing project virtual environment: .venv"
        rm -rf .venv/
    fi

    if [ -d "venv" ]; then
        echo "Removing project virtual environment: 'venv'"
        rm -rf venv/
    fi
fi
